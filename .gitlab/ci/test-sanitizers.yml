.tests_sanitizers_template:
  tags:
    - $CHIP_NAME
    - jtag
  artifacts:
    paths:
      - $TEST_RUN_DIR/debug_backend_tests.log
    reports:
      junit:
        - $TEST_RUN_DIR/results/*
    when: always
    expire_in: 1 week
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_TYPE == "run_sanitizer_tests"
  before_script:
  - pip install unittest-xml-reporting --no-deps
  - pip install pygdbmi==0.9.0.2
  variables:
    PLATFORM_NAME: "linux-armhf-test"
  script:
    - !reference [.export_toolchain, script]
    - export ASAN_OPTIONS=detect_invalid_pointer_pairs=2:print_stacktrace=1:strict_string_checks=1:halt_on_error=0:allocator_may_return_null=1
    - . $PWD/${TEST_RUN_DIR}/gen_ut_app/gcov_data/gcov_env.sh
    - !reference [.run_tests_linux, script]

.tests_sanitizers_master_template:
  extends: .tests_sanitizers_template
  stage: sanitizer_test_idf_master
  image: $CI_DOCKER_REGISTRY/target-test-env-v5.5:1
  before_script:
  - pip install xmlrunner
  - pip install pygdbmi==0.9.0.2
  variables:
    CHIP_TEST_TOOLCHAIN: "xtensa-${CHIP_NAME}"
    TEST_RUN_DIR: "build_test_app_${CHIP_NAME}"
    ESP_GDB_TOOLCHAIN: "${ESP_V5_5X_XTENSA_GDB_TOOLCHAIN}"
    TOOLCHAIN_PREFIX: "xtensa-esp"
    ESP_TOOLCHAIN: "${ESP_V5_5X_TOOLCHAIN_VER}"

.tests_sanitizers_master_riscv_template:
  extends: .tests_sanitizers_master_template
  variables:
    CHIP_TEST_TOOLCHAIN: "riscv32-esp"
    ESP_GDB_TOOLCHAIN: "${ESP_V5_5X_RISCV_GDB_TOOLCHAIN}"
    TOOLCHAIN_PREFIX: "riscv32-esp"

.tests_sanitizers_v5.4.x_template:
  extends: .tests_sanitizers_template
  stage: sanitizer_test_idf5.4.x
  image: $CI_DOCKER_REGISTRY/target-test-env-v5.4:1
  variables:
    CHIP_TEST_TOOLCHAIN: "xtensa-${CHIP_NAME}"
    TEST_RUN_DIR: "build_test_app_${CHIP_NAME}_idf5.4.x"
    ESP_GDB_TOOLCHAIN: "${ESP_V5_4X_XTENSA_GDB_TOOLCHAIN}"
    TOOLCHAIN_PREFIX: "xtensa-esp"
    ESP_TOOLCHAIN: "${ESP_V5_4X_TOOLCHAIN_VER}"

.tests_sanitizers_v5.4.x_riscv_template:
  extends: .tests_sanitizers_v5.4.x_template
  variables:
    CHIP_TEST_TOOLCHAIN: "riscv32-esp"
    ESP_GDB_TOOLCHAIN: "${ESP_V5_4X_RISCV_GDB_TOOLCHAIN}"
    TOOLCHAIN_PREFIX: "riscv32-esp"

.tests_sanitizers_v5.3.x_template:
  extends: .tests_sanitizers_template
  stage: sanitizer_test_idf5.3.x
  image: $CI_DOCKER_REGISTRY/target-test-env-v5.3:1
  variables:
    CHIP_TEST_TOOLCHAIN: "xtensa-${CHIP_NAME}"
    TEST_RUN_DIR: "build_test_app_${CHIP_NAME}_idf5.3.x"
    ESP_GDB_TOOLCHAIN: "${ESP_V5_3X_XTENSA_GDB_TOOLCHAIN}"
    TOOLCHAIN_PREFIX: "xtensa-esp"
    ESP_TOOLCHAIN: "${ESP_V5_3X_TOOLCHAIN_VER}"

.tests_sanitizers_v5.3.x_riscv_template:
  extends: .tests_sanitizers_v5.3.x_template
  variables:
    CHIP_TEST_TOOLCHAIN: "riscv32-esp"
    ESP_GDB_TOOLCHAIN: "${ESP_V5_3X_RISCV_GDB_TOOLCHAIN}"
    TOOLCHAIN_PREFIX: "riscv32-esp"

.tests_sanitizers_v5.2.x_template:
  extends: .tests_sanitizers_template
  stage: sanitizer_test_idf5.2.x
  image: $CI_DOCKER_REGISTRY/target-test-env-v5.2:2
  variables:
    CHIP_TEST_TOOLCHAIN: "xtensa-${CHIP_NAME}"
    TEST_RUN_DIR: "build_test_app_${CHIP_NAME}_idf5.2.x"
    ESP_GDB_TOOLCHAIN: "${ESP_V5_2X_XTENSA_GDB_TOOLCHAIN}"
    TOOLCHAIN_PREFIX: "xtensa-esp"
    ESP_TOOLCHAIN: "${ESP_V5_2X_TOOLCHAIN_VER}"

.tests_sanitizers_v5.2.x_riscv_template:
  extends: .tests_sanitizers_v5.2.x_template
  variables:
    CHIP_TEST_TOOLCHAIN: "riscv32-esp"
    ESP_GDB_TOOLCHAIN: "${ESP_V5_2X_RISCV_GDB_TOOLCHAIN}"
    TOOLCHAIN_PREFIX: "riscv32-esp"

.tests_sanitizers_v5.1.x_template:
  extends: .tests_sanitizers_template
  stage: sanitizer_test_idf5.1.x
  image: $CI_DOCKER_REGISTRY/target-test-env-v5.1:1
  variables:
    CHIP_TEST_TOOLCHAIN: "xtensa-${CHIP_NAME}"
    TEST_RUN_DIR: "build_test_app_${CHIP_NAME}_idf5.1.x"
    ESP_GDB_TOOLCHAIN: "${ESP_V5_1X_XTENSA_GDB_TOOLCHAIN}"
    TOOLCHAIN_PREFIX: "xtensa-${CHIP_NAME}"
    ESP_TOOLCHAIN: "${ESP_V5_1X_TOOLCHAIN_VER}"

.tests_sanitizers_v5.1.x_riscv_template:
  extends: .tests_sanitizers_v5.1.x_template
  stage: sanitizer_test_idf5.1.x
  image: $CI_DOCKER_REGISTRY/target-test-env-v5.1:1
  variables:
    CHIP_TEST_TOOLCHAIN: "riscv32-esp"
    ESP_GDB_TOOLCHAIN: "${ESP_V5_1X_RISCV_GDB_TOOLCHAIN}"
    TOOLCHAIN_PREFIX: "riscv32-esp"

.tests_sanitizers_v5.0.x_template:
  extends: .tests_sanitizers_template
  stage: sanitizer_test_idf5.0.x
  image: $CI_DOCKER_REGISTRY/target-test-env-v5.0:3
  variables:
    CHIP_TEST_TOOLCHAIN: "xtensa-${CHIP_NAME}"
    TEST_RUN_DIR: "build_test_app_${CHIP_NAME}_idf5.0.x"
    ESP_GDB_TOOLCHAIN: "${ESP_V5_0X_XTENSA_GDB_TOOLCHAIN}"
    TOOLCHAIN_PREFIX: "xtensa-${CHIP_NAME}"
    ESP_TOOLCHAIN: "${ESP_V5_0X_TOOLCHAIN_VER}"

.tests_sanitizers_v5.0.x_riscv_template:
  extends: .tests_sanitizers_v5.0.x_template
  variables:
    CHIP_TEST_TOOLCHAIN: "riscv32-esp"
    ESP_GDB_TOOLCHAIN: "${ESP_V5_0X_RISCV_GDB_TOOLCHAIN}"
    TOOLCHAIN_PREFIX: "riscv32-esp"

##############
# IDF master #
##############

tests_sanitizers_esp32:
  extends: .tests_sanitizers_master_template
  needs:
    - job: build_test_app_esp32
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32-wrover-kit-3.3v -e *.*Encrypted"

tests_sanitizers_esp32s2:
  extends: .tests_sanitizers_master_template
  needs:
    - job: build_test_app_esp32s2
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s2"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32s2-devkitj -p test_*.*Single"

tests_sanitizers_esp32s3_dual:
  extends: .tests_sanitizers_master_template
  needs:
    - job: build_test_app_esp32s3_dual
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s3"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32s3-ftdi -p test_*.*Dual"

tests_sanitizers_esp32s3_single:
  extends: .tests_sanitizers_master_template
  needs:
    - job: build_test_app_esp32s3_single
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s3"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32s3-ftdi -p test_*.Single"

tests_sanitizers_esp32c2:
  extends: .tests_sanitizers_master_riscv_template
  needs:
    - job: build_test_app_esp32c2
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32c2"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32c2-ftdi -p test_*.*Single"

tests_sanitizers_esp32c3:
  extends: .tests_sanitizers_master_riscv_template
  needs:
    - job: build_test_app_esp32c3
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32c3"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32c3-ftdi -p test_*.*Single"

tests_sanitizers_esp32c6:
  extends: .tests_sanitizers_master_riscv_template
  tags:
    - esp32c6
    - usb_serial_jtag
  needs:
    - job: build_test_app_esp32c6
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32c6"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32c6-builtin -p test_*.*Single -u /dev/serial_ports/ttyACM-esp32"

tests_sanitizers_esp32h2:
  extends: .tests_sanitizers_master_riscv_template
  tags:
    - esp32h2
    - usb_serial_jtag
  needs:
    - job: build_test_app_esp32h2
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32h2"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32h2-builtin -p test_*.*Single -u /dev/serial_ports/ttyACM-esp32"

##############
# IDF  5.4.X #
##############

tests_sanitizers_esp32_idf5.4.x:
  extends: .tests_sanitizers_v5.4.x_template
  needs:
    - job: build_test_app_esp32_idf5.4.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32-wrover-kit-3.3v -e *.*Encrypted"

tests_sanitizers_esp32s2_idf5.4.x:
  extends: .tests_sanitizers_v5.4.x_template
  needs:
    - job: build_test_app_esp32s2_idf5.4.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s2"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32s2-devkitj -p test_*.*Single"

tests_sanitizers_esp32s3_idf5.4.x_dual:
  extends: .tests_sanitizers_v5.4.x_template
  needs:
    - job: build_test_app_esp32s3_idf5.4.x_dual
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s3"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32s3-ftdi -p test_*.*Dual"

tests_sanitizers_esp32s3_idf5.4.x_single:
  extends: .tests_sanitizers_v5.4.x_template
  needs:
    - job: build_test_app_esp32s3_idf5.4.x_single
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s3"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32s3-ftdi -p test_*.Single"

tests_sanitizers_esp32c2_idf5.4.x:
  extends: .tests_sanitizers_v5.4.x_riscv_template
  needs:
    - job: build_test_app_esp32c2_idf5.4.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32c2"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32c2-ftdi -p test_*.*Single"

tests_sanitizers_esp32c3_idf5.4.x:
  extends: .tests_sanitizers_v5.4.x_riscv_template
  needs:
    - job: build_test_app_esp32c3_idf5.4.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32c3"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32c3-ftdi -p test_*.*Single"

tests_sanitizers_esp32c6_idf5.4.x:
  extends: .tests_sanitizers_v5.4.x_riscv_template
  tags:
    - esp32c6
    - usb_serial_jtag
  needs:
    - job: build_test_app_esp32c6_idf5.4.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32c6"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32c6-builtin -p test_*.*Single -u /dev/serial_ports/ttyACM-esp32"

tests_sanitizers_esp32h2_idf5.4.x:
  extends: .tests_sanitizers_v5.4.x_riscv_template
  tags:
    - esp32h2
    - usb_serial_jtag
  needs:
    - job: build_test_app_esp32h2_idf5.4.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32h2"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32h2-builtin -p test_*.*Single -u /dev/serial_ports/ttyACM-esp32"

##############
# IDF  5.3.X #
##############

tests_sanitizers_esp32_idf5.3.x:
  extends: .tests_sanitizers_v5.3.x_template
  needs:
    - job: build_test_app_esp32_idf5.3.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32-wrover-kit-3.3v -e *.*Encrypted"

tests_sanitizers_esp32s2_idf5.3.x:
  extends: .tests_sanitizers_v5.3.x_template
  needs:
    - job: build_test_app_esp32s2_idf5.3.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s2"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32s2-devkitj -p test_*.*Single"

tests_sanitizers_esp32s3_idf5.3.x_dual:
  extends: .tests_sanitizers_v5.3.x_template
  needs:
    - job: build_test_app_esp32s3_idf5.3.x_dual
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s3"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32s3-ftdi -p test_*.*Dual"

tests_sanitizers_esp32s3_idf5.3.x_single:
  extends: .tests_sanitizers_v5.3.x_template
  needs:
    - job: build_test_app_esp32s3_idf5.3.x_single
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s3"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32s3-ftdi -p test_*.Single"

tests_sanitizers_esp32c2_idf5.3.x:
  extends: .tests_sanitizers_v5.3.x_riscv_template
  needs:
    - job: build_test_app_esp32c2_idf5.3.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32c2"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32c2-ftdi -p test_*.*Single"

tests_sanitizers_esp32c3_idf5.3.x:
  extends: .tests_sanitizers_v5.3.x_riscv_template
  needs:
    - job: build_test_app_esp32c3_idf5.3.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32c3"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32c3-ftdi -p test_*.*Single"

tests_sanitizers_esp32c6_idf5.3.x:
  extends: .tests_sanitizers_v5.3.x_riscv_template
  tags:
    - esp32c6
    - usb_serial_jtag
  needs:
    - job: build_test_app_esp32c6_idf5.3.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32c6"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32c6-builtin -p test_*.*Single -u /dev/serial_ports/ttyACM-esp32"

tests_sanitizers_esp32h2_idf5.3.x:
  extends: .tests_sanitizers_v5.3.x_riscv_template
  tags:
    - esp32h2
    - usb_serial_jtag
  needs:
    - job: build_test_app_esp32h2_idf5.3.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32h2"
    TEST_RUN_EXTRA_OPTS: "-i latest -b esp32h2-builtin -p test_*.*Single -u /dev/serial_ports/ttyACM-esp32"

#############
# IDF 5.2.X #
#############

tests_sanitizers_esp32_idf5.2.x:
  extends: .tests_sanitizers_v5.2.x_template
  needs:
    - job: build_test_app_esp32_idf5.2.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_2_X_RELEASE_TAG -b esp32-wrover-kit-3.3v -e *.*Encrypted"

tests_sanitizers_esp32s2_idf5.2.x:
  extends: .tests_sanitizers_v5.2.x_template
  needs:
    - job: build_test_app_esp32s2_idf5.2.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s2"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_2_X_RELEASE_TAG -b esp32s2-devkitj -p test_*.*Single"

tests_sanitizers_esp32s3_idf5.2.x_dual:
  extends: .tests_sanitizers_v5.2.x_template
  needs:
    - job: build_test_app_esp32s3_idf5.2.x_dual
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s3"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_2_X_RELEASE_TAG -b esp32s3-ftdi -p test_*.*Dual"

tests_sanitizers_esp32s3_idf5.2.x_single:
  extends: .tests_sanitizers_v5.2.x_template
  needs:
    - job: build_test_app_esp32s3_idf5.2.x_single
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s3"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_2_X_RELEASE_TAG -b esp32s3-ftdi -p test_*.*Single"

tests_sanitizers_esp32c2_idf5.2.x:
  extends: .tests_sanitizers_v5.2.x_riscv_template
  needs:
    - job: build_test_app_esp32c2_idf5.2.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32c2"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_2_X_RELEASE_TAG -b esp32c2-ftdi -p test_*.*Single"

tests_sanitizers_esp32c3_idf5.2.x:
  extends: .tests_sanitizers_v5.2.x_riscv_template
  needs:
    - job: build_test_app_esp32c3_idf5.2.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32c3"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_2_X_RELEASE_TAG -b esp32c3-ftdi -p test_*.*Single"

tests_sanitizers_esp32c6_idf5.2.x:
  extends: .tests_sanitizers_v5.2.x_riscv_template
  tags:
    - esp32c6
    - usb_serial_jtag
  needs:
    - job: build_test_app_esp32c6_idf5.2.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32c6"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_2_X_RELEASE_TAG -b esp32c6-builtin -p test_*.*Single -u /dev/serial_ports/ttyACM-esp32"

tests_sanitizers_esp32h2_idf5.2.x:
  extends: .tests_sanitizers_v5.2.x_riscv_template
  tags:
    - esp32h2
    - usb_serial_jtag
  needs:
    - job: build_test_app_esp32h2_idf5.2.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32h2"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_2_X_RELEASE_TAG -b esp32h2-builtin -p test_*.*Single -u /dev/serial_ports/ttyACM-esp32"

#############
# IDF 5.1.X #
#############

tests_sanitizers_esp32_idf5.1.x:
  extends: .tests_sanitizers_v5.1.x_template
  needs:
    - job: build_test_app_esp32_idf5.1.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32-wrover-kit-3.3v -e *.*Encrypted"

tests_sanitizers_esp32s2_idf5.1.x:
  extends: .tests_sanitizers_v5.1.x_template
  needs:
    - job: build_test_app_esp32s2_idf5.1.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s2"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32s2-devkitj -p test_*.*Single"

tests_sanitizers_esp32s3_idf5.1.x_dual:
  extends: .tests_sanitizers_v5.1.x_template
  needs:
    - job: build_test_app_esp32s3_idf5.1.x_dual
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s3"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32s3-builtin -p test_*.*Dual"

tests_sanitizers_esp32s3_idf5.1.x_single:
  extends: .tests_sanitizers_v5.1.x_template
  needs:
    - job: build_test_app_esp32s3_idf5.1.x_single
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s3"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32s3-builtin -p test_*.*Single"

tests_sanitizers_esp32c2_idf5.1.x:
  extends: .tests_sanitizers_v5.1.x_riscv_template
  needs:
    - job: build_test_app_esp32c2_idf5.1.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32c2"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32c2-ftdi -p test_*.*Single"

tests_sanitizers_esp32c3_idf5.1.x:
  extends: .tests_sanitizers_v5.1.x_riscv_template
  needs:
    - job: build_test_app_esp32c3_idf5.1.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32c3"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32c3-ftdi -p test_*.*Single"

tests_sanitizers_esp32c6_idf5.1.x:
  extends: .tests_sanitizers_v5.1.x_riscv_template
  tags:
    - esp32c6
    - usb_serial_jtag
  needs:
    - job: build_test_app_esp32c6_idf5.1.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32c6"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32c6-builtin -p test_*.*Single -u /dev/serial_ports/ttyACM-esp32"

tests_sanitizers_esp32h2_idf5.1.x:
  extends: .tests_sanitizers_v5.1.x_riscv_template
  tags:
    - esp32h2
    - usb_serial_jtag
  needs:
    - job: build_test_app_esp32h2_idf5.1.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32h2"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_1_X_RELEASE_TAG -b esp32h2-builtin -p test_*.*Single -u /dev/serial_ports/ttyACM-esp32"

#############
# IDF 5.0.X #
#############

tests_sanitizers_esp32_idf5.0.x:
  extends: .tests_sanitizers_v5.0.x_template
  needs:
    - job: build_test_app_esp32_idf5.0.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_0_X_RELEASE_TAG -b esp32-wrover-kit-3.3v -e *.*Encrypted"

tests_sanitizers_esp32s2_idf5.0.x:
  extends: .tests_sanitizers_v5.0.x_template
  needs:
    - job: build_test_app_esp32s2_idf5.0.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s2"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_0_X_RELEASE_TAG -b esp32s2-devkitj -p test_*.*Single"

tests_sanitizers_esp32s3_idf5.0.x_dual:
  extends: .tests_sanitizers_v5.0.x_template
  needs:
    - job: build_test_app_esp32s3_idf5.0.x_dual
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s3"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_0_X_RELEASE_TAG -b esp32s3-ftdi -p test_*.*Dual"

tests_sanitizers_esp32s3_idf5.0.x_single:
  extends: .tests_sanitizers_v5.0.x_template
  needs:
    - job: build_test_app_esp32s3_idf5.0.x_single
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32s3"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_0_X_RELEASE_TAG -b esp32s3-ftdi -p test_*.*Single"

tests_sanitizers_esp32c2_idf5.0.x:
  extends: .tests_sanitizers_v5.0.x_riscv_template
  needs:
    - job: build_test_app_esp32c2_idf5.0.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32c2"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_0_X_RELEASE_TAG -b esp32c2-ftdi -p test_*.*Single"

tests_sanitizers_esp32c3_idf5.0.x:
  extends: .tests_sanitizers_v5.0.x_riscv_template
  needs:
    - job: build_test_app_esp32c3_idf5.0.x
    - job: build_linux_armhf_sanitizer_test
  variables:
    CHIP_NAME: "esp32c3"
    TEST_RUN_EXTRA_OPTS: "-i $TEST_APP_IDF5_0_X_RELEASE_TAG -b esp32c3-ftdi -p test_*.*Single"

###########
#  NUTTX  #
###########

# nuttx build environment is nuttx/build-env-v5.1
test_sanitizers_nuttx_esp32:
  image: $CI_DOCKER_REGISTRY/target-test-env-v5.1:1
  stage: sanitizer_test_nuttx
  tags:
    - esp32
    - jtag
  artifacts:
    paths:
      - $TEST_RUN_DIR/debug_backend_tests.log
    reports:
      junit:
        - $TEST_RUN_DIR/results/*
    when: always
    expire_in: 1 week
  variables:
    PLATFORM_NAME: "linux-armhf-test"
    ESP_TOOLCHAIN: "${ESP_V5_1X_TOOLCHAIN_VER}"
    ESP_GDB_TOOLCHAIN: "${ESP_V5_1X_TOOLCHAIN_VER}"
    TOOLCHAIN_PREFIX: "xtensa-esp32"
    CHIP_TEST_TOOLCHAIN: "xtensa-esp32"
    TEST_RUN_DIR: "nuttx_test"
    NUTTX_APP_NAME: "nuttx_openocd"
    OOCD_CMDS: "set ESP_RTOS nuttx,set ESP_ONLYCPU 1"
    TEST_RUN_EXTRA_OPTS: "-i other -b esp32-wrover-kit-3.3v -p test_nuttx -e *.*Encrypted"
  needs:
    - job: build_linux_armhf_sanitizer_test
    - job: build_nuttx_app
      artifacts: false
    - project: idf/apache/esp-nuttx-apps
      job: build_esp32_openocd
      ref: master
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_TYPE == "run_sanitizer_tests"
  script:
    - !reference [.export_toolchain, script]
    - mkdir -p $TEST_RUN_DIR/$NUTTX_APP_NAME
    - !reference [.copy_nuttx_files, script]
    - export ASAN_OPTIONS=detect_invalid_pointer_pairs=2:print_stacktrace=1:strict_string_checks=1:halt_on_error=0:allocator_may_return_null=1
    - !reference [.run_tests_linux, script]

###########
#  MISC   #
###########

.sanitizer_check_armhf: &sanitizer_check_armhf
  image: $CI_DOCKER_REGISTRY/target-test-env-v5.3:1
  tags:
    - arm
  allow_failure: true
  artifacts:
    paths:
      - $TEST_RUN_DIR/sanitizer_errors.log
    when: always
    expire_in: 1 week
  rules:
    - if: $CI_PIPELINE_SOURCE == "schedule" && $SCHEDULE_TYPE == "run_sanitizer_tests"
  script:
    - grep -i -e".*sanitizer" -e"runtime error" ${TEST_RUN_DIR}/debug_backend_tests.log > ${TEST_RUN_DIR}/sanitizer_errors.log || true
    # fail if `sanitizer_errors.log` is not empty
    - "[[ ! -s ${TEST_RUN_DIR}/sanitizer_errors.log ]]"

sanitizer_check_armhf_esp32:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf_master
  needs:
    - job: tests_sanitizers_esp32
  variables:
    TEST_RUN_DIR: "build_test_app_esp32"

sanitizer_check_armhf_esp32_idf5.4.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.4.x
  needs:
    - job: tests_sanitizers_esp32_idf5.4.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32_idf5.4.x"

sanitizer_check_armhf_esp32_idf5.3.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.3.x
  needs:
    - job: tests_sanitizers_esp32_idf5.3.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32_idf5.3.x"

sanitizer_check_armhf_esp32_idf5.2.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.2.x
  needs:
    - job: tests_sanitizers_esp32_idf5.2.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32_idf5.2.x"

sanitizer_check_armhf_esp32_idf5.1.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.1.x
  needs:
    - job: tests_sanitizers_esp32_idf5.1.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32_idf5.1.x"

sanitizer_check_armhf_esp32_idf5.0.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.0.x
  needs:
    - job: tests_sanitizers_esp32_idf5.0.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32_idf5.0.x"

sanitizer_check_armhf_esp32s2:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf_master
  needs:
    - job: tests_sanitizers_esp32s2
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s2"

sanitizer_check_armhf_esp32s2_idf5.4.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.4.x
  needs:
    - job: tests_sanitizers_esp32s2_idf5.4.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s2_idf5.4.x"

sanitizer_check_armhf_esp32s2_idf5.3.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.3.x
  needs:
    - job: tests_sanitizers_esp32s2_idf5.3.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s2_idf5.3.x"

sanitizer_check_armhf_esp32s2_idf5.2.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.2.x
  needs:
    - job: tests_sanitizers_esp32s2_idf5.2.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s2_idf5.2.x"

sanitizer_check_armhf_esp32s2_idf5.1.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.1.x
  needs:
    - job: tests_sanitizers_esp32s2_idf5.1.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s2_idf5.1.x"

sanitizer_check_armhf_esp32s2_idf5.0.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.0.x
  needs:
    - job: tests_sanitizers_esp32s2_idf5.0.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s2_idf5.0.x"

sanitizer_check_armhf_esp32s3_dual:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf_master
  needs:
    - job: tests_sanitizers_esp32s3_dual
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s3_dual"

sanitizer_check_armhf_esp32s3_single:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf_master
  needs:
    - job: tests_sanitizers_esp32s3_single
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s3_single"

sanitizer_check_armhf_esp32s3_idf5.4.x_dual:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.4.x
  needs:
    - job: tests_sanitizers_esp32s3_idf5.4.x_dual
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s3_idf5.4.x_dual"

sanitizer_check_armhf_esp32s3_idf5.4.x_single:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.4.x
  needs:
    - job: tests_sanitizers_esp32s3_idf5.4.x_single
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s3_idf5.4.x_single"

sanitizer_check_armhf_esp32s3_idf5.3.x_dual:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.3.x
  needs:
    - job: tests_sanitizers_esp32s3_idf5.3.x_dual
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s3_idf5.3.x_dual"

sanitizer_check_armhf_esp32s3_idf5.3.x_single:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.3.x
  needs:
    - job: tests_sanitizers_esp32s3_idf5.3.x_single
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s3_idf5.3.x_single"

sanitizer_check_armhf_esp32s3_idf5.2.x_dual:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.2.x
  needs:
    - job: tests_sanitizers_esp32s3_idf5.2.x_dual
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s3_idf5.2.x_dual"

sanitizer_check_armhf_esp32s3_idf5.2.x_single:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.2.x
  needs:
    - job: tests_sanitizers_esp32s3_idf5.2.x_single
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s3_idf5.2.x_single"

sanitizer_check_armhf_esp32s3_idf5.1.x_dual:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.1.x
  needs:
    - job: tests_sanitizers_esp32s3_idf5.1.x_dual
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s3_idf5.1.x_dual"

sanitizer_check_armhf_esp32s3_idf5.1.x_single:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.1.x
  needs:
    - job: tests_sanitizers_esp32s3_idf5.1.x_single
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s3_idf5.1.x_single"

sanitizer_check_armhf_esp32s3_idf5.0.x_dual:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.0.x
  needs:
    - job: tests_sanitizers_esp32s3_idf5.0.x_dual
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s3_idf5.0.x_dual"

sanitizer_check_armhf_esp32s3_idf5.0.x_single:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.0.x
  needs:
    - job: tests_sanitizers_esp32s3_idf5.0.x_single
  variables:
    TEST_RUN_DIR: "build_test_app_esp32s3_idf5.0.x_single"

sanitizer_check_armhf_esp32c2:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf_master
  needs:
    - job: tests_sanitizers_esp32c2
  variables:
    TEST_RUN_DIR: "build_test_app_esp32c2"

sanitizer_check_armhf_esp32c2_idf5.4.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.4.x
  needs:
    - job: tests_sanitizers_esp32c2_idf5.4.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32c2_idf5.4.x"

sanitizer_check_armhf_esp32c2_idf5.3.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.3.x
  needs:
    - job: tests_sanitizers_esp32c2_idf5.3.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32c2_idf5.3.x"

sanitizer_check_armhf_esp32c2_idf5.2.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.2.x
  needs:
    - job: tests_sanitizers_esp32c2_idf5.2.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32c2_idf5.2.x"

sanitizer_check_armhf_esp32c2_idf5.1.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.1.x
  needs:
    - job: tests_sanitizers_esp32c2_idf5.1.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32c2_idf5.1.x"

sanitizer_check_armhf_esp32c2_idf5.0.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.0.x
  needs:
    - job: tests_sanitizers_esp32c2_idf5.0.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32c2_idf5.0.x"

sanitizer_check_armhf_esp32c3:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf_master
  needs:
    - job: tests_sanitizers_esp32c3
  variables:
    TEST_RUN_DIR: "build_test_app_esp32c3"

sanitizer_check_armhf_esp32c3_idf5.4.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.4.x
  needs:
    - job: tests_sanitizers_esp32c3_idf5.4.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32c3_idf5.4.x"

sanitizer_check_armhf_esp32c3_idf5.3.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.3.x
  needs:
    - job: tests_sanitizers_esp32c3_idf5.3.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32c3_idf5.3.x"

sanitizer_check_armhf_esp32c3_idf5.2.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.2.x
  needs:
    - job: tests_sanitizers_esp32c3_idf5.2.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32c3_idf5.2.x"

sanitizer_check_armhf_esp32c3_idf5.1.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.1.x
  needs:
    - job: tests_sanitizers_esp32c3_idf5.1.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32c3_idf5.1.x"

sanitizer_check_armhf_esp32c3_idf5.0.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.0.x
  needs:
    - job: tests_sanitizers_esp32c3_idf5.0.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32c3_idf5.0.x"

sanitizer_check_armhf_esp32c6:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf_master
  needs:
    - job: tests_sanitizers_esp32c6
  variables:
    TEST_RUN_DIR: "build_test_app_esp32c6"

.sanitizer_check_armhf_esp32c6_idf5.4.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.4.x
  needs:
    - job: tests_sanitizers_esp32c6_idf5.4.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32c6_idf5.4.x"

.sanitizer_check_armhf_esp32c6_idf5.3.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.3.x
  needs:
    - job: tests_sanitizers_esp32c6_idf5.3.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32c6_idf5.3.x"

.sanitizer_check_armhf_esp32c6_idf5.2.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.2.x
  needs:
    - job: tests_sanitizers_esp32c6_idf5.2.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32c6_idf5.2.x"

.sanitizer_check_armhf_esp32c6_idf5.1.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.1.x
  needs:
    - job: tests_sanitizers_esp32c6_idf5.1.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32c6_idf5.1.x"

sanitizer_check_armhf_esp32h2:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf_master
  needs:
    - job: tests_sanitizers_esp32h2
  variables:
    TEST_RUN_DIR: "build_test_app_esp32h2"

sanitizer_check_armhf_esp32h2_idf5.4.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.4.x
  needs:
    - job: tests_sanitizers_esp32h2_idf5.4.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32h2_idf5.4.x"

sanitizer_check_armhf_esp32h2_idf5.3.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.3.x
  needs:
    - job: tests_sanitizers_esp32h2_idf5.3.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32h2_idf5.3.x"

sanitizer_check_armhf_esp32h2_idf5.2.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.2.x
  needs:
    - job: tests_sanitizers_esp32h2_idf5.2.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32h2_idf5.2.x"

sanitizer_check_armhf_esp32h2_idf5.1.x:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_idf5.1.x
  needs:
    - job: tests_sanitizers_esp32h2_idf5.1.x
  variables:
    TEST_RUN_DIR: "build_test_app_esp32h2_idf5.1.x"

sanitizer_check_armhf_nuttx_esp32:
  <<: *sanitizer_check_armhf
  stage: sanitizer_check_nuttx
  needs:
    - job: test_sanitizers_nuttx_esp32
  variables:
    TEST_RUN_DIR: "nuttx_test"
